# Instalación de paquetes
library(tidyr)
library (ggpubr)
library(ggplot2)
library (dplyr)
if (!require(nortest)){
install.packages("nortest", dependencies = TRUE )
require (nortest)
}
# ////////////////////////// PREGUNTA 1 //////////////////////////
#¿Proporciona esta información evidencia para concluir que la compañía no está llenando sus frascos como
#lo anuncia?
texto<- "4.62 4.43 5.18 4.89 4.89 5.41 4.87 5.07 5.30 4.98 4.54 5.21 4.60 4.71 4.58
4.99 5.05 4.70 4.63 4.95 4.85 4.19 5.25 4.69 5.03 4.74 4.67 4.85 4.45 4.93
4.42 4.40 5.59 4.69 5.42 5.19 4.99 4.88 4.03 5.51 4.90 4.43 4.93 4.84 4.73
4.89 4.53 4.97 5.10 5.95 4.95 4.18 4.91 4.87 5.38 5.49 4.96 4.76 4.76 4.63
5.10 4.84 4.87 4.39 4.99 5.03 4.31 5.05 4.71 4.78 4.90 5.02 4.84 5.18 4.79
4.99 4.55 4.70 4.74 4.60 4.94 5.25 5.01 4.95 4.19 5.27 5.00 5.15 5.12 4.34
4.27 4.92 4.98 4.91 5.05 5.28 4.29 5.58 5.55 4.60"
file <- textConnection(texto)
datos <- scan(file)
peso <- data.frame("peso" = datos, stringsAsFactors = TRUE)
media <- mean(datos)
desv_est <- sd(datos)
#Hipotesis
#Hipotesis Nula:
# m = 5
#Hipotesis Alternativa
# m <> 5
#Como se tienen mas de 30 observaciones en la muestra se decide comprobar si es posible utilizar
#la prueba Z
#Pruebas de  normalidad
#Primero se comprueba si es factible realizar la prueba verificando si la muestra
#sigue aproximadamente una distribución normal
# Gráfico Q-Q para la variable peso
g <- ggqqplot(peso, x = "peso", color = "red")
print(g)
hist(datos)
alfa = 0.01
Z <- (media - 5) / desv_est
cat("Z =", Z, "\n")
p <-2 * pnorm(Z, lower.tail = FALSE)
#Prueba de Shapiro-Wilk
shapiro.test(datos)
#Prueba de Kolmogorov-Smirnov
lillie.test(datos)
prueba <- z.test(media, mu = 5, alternative = "tow.sided", conf.level = 1 - alfa)
prueba <- z.test(media, mu = 5, alternative = "tow.sided", conf.level = 1 - alfa)
#Nombres:
#Estefanía Alvarez 20.371.287-1
#Felipe Cornejo 20.427.782-6
#David Morales 19.881.480-6
#Claudio Muñoz 20.003.395-7
# Instalación de paquetes
library(tidyr)
library (TeachingDemos)
library (ggpubr)
library(ggplot2)
library (dplyr)
if (!require(nortest)){
install.packages("nortest", dependencies = TRUE )
require (nortest)
}
# ////////////////////////// PREGUNTA 1 //////////////////////////
#¿Proporciona esta información evidencia para concluir que la compañía no está llenando sus frascos como
#lo anuncia?
texto<- "4.62 4.43 5.18 4.89 4.89 5.41 4.87 5.07 5.30 4.98 4.54 5.21 4.60 4.71 4.58
4.99 5.05 4.70 4.63 4.95 4.85 4.19 5.25 4.69 5.03 4.74 4.67 4.85 4.45 4.93
4.42 4.40 5.59 4.69 5.42 5.19 4.99 4.88 4.03 5.51 4.90 4.43 4.93 4.84 4.73
4.89 4.53 4.97 5.10 5.95 4.95 4.18 4.91 4.87 5.38 5.49 4.96 4.76 4.76 4.63
5.10 4.84 4.87 4.39 4.99 5.03 4.31 5.05 4.71 4.78 4.90 5.02 4.84 5.18 4.79
4.99 4.55 4.70 4.74 4.60 4.94 5.25 5.01 4.95 4.19 5.27 5.00 5.15 5.12 4.34
4.27 4.92 4.98 4.91 5.05 5.28 4.29 5.58 5.55 4.60"
file <- textConnection(texto)
datos <- scan(file)
peso <- data.frame("peso" = datos, stringsAsFactors = TRUE)
media <- mean(datos)
desv_est <- sd(datos)
#Hipotesis
#Hipotesis Nula:
# m = 5
#Hipotesis Alternativa
# m <> 5
#Como se tienen mas de 30 observaciones en la muestra se decide comprobar si es posible utilizar
#la prueba Z
#Pruebas de  normalidad
#Primero se comprueba si es factible realizar la prueba verificando si la muestra
#sigue aproximadamente una distribución normal
# Gráfico Q-Q para la variable peso
g <- ggqqplot(peso, x = "peso", color = "red")
print(g)
hist(datos)
alfa = 0.01
Z <- (media - 5) / desv_est
cat("Z =", Z, "\n")
p <-2 * pnorm(Z, lower.tail = FALSE)
#Prueba de Shapiro-Wilk
shapiro.test(datos)
#Prueba de Kolmogorov-Smirnov
lillie.test(datos)
#¿Proporciona esta información evidencia para concluir que la compañía no está
#llenando sus frascos como lo anuncia?
#R: Mediante el gráfico Q-Q se pueden apreciar la presencia de valores atipicos
#Por lo que no es posible aplicar ninguna de las pruebas. Por lo tanto no se tiene
#evidencia suficiente para concluir si
prueba <- z.test(media, mu = 5, alternative = "tow.sided", conf.level = 1 - alfa)
prueba <- z.test(media, mu = 5, alternative = "tow.sided", stdev = desv_est, conf.level = 1 - alfa)
prueba <- t.test(datos, mu = 5, alternative = "two.sided", conf.level = 1 - alfa)
print(prueba)
View(prueba)
#Llamado de librerías
library(ggpubr)
library(ggplot2)
library (dplyr)
#Importación de datos
datos <- chickwts
#Grafico de cajas que compara los pesos de los pollitos por tipo de alimento suministrado
g <- boxplot(weight ~ feed,
data = datos,
border = "red",
col = "pink",
ylab = "Pesos de los Pollitos [g]",
xlab = "Tipo de Alimento Suministrado")
print (g)
# Se grafican todas las muestras con cajas como primera instancia para responder la pregunta planteada, viendo que
# la mayoría de los datos de meatmeal superan a soybean.
# Parte 1: Verificación
# Para poder utilizar la prueba T en 2 muestras independientes, requerimos demostrar que cumplen los requisitos:
#1. Cada muestra cumple las condiciones para usar la distribución t.
#2. Las muestras son independientes entre sí.
# Para la 1, las condiciones de la distribución t es que cada muestra cuente con una distribución normal y que
# las muestras sean independientes entre sí. Por lo tanto, verificaremos estas condiciones para cada muestra (soybean y meatmeal)
# Se separan las muestras meatmeal y soybean
datos.meatmeal <- datos %>% filter(feed == "meatmeal")
datos.soybean <- datos %>% filter(feed == "soybean")
# Verificar si las distribuciones se acercan a la normal
g.meatmeal <- ggqqplot (data = datos.meatmeal,
x = "weight",
color = "steelblue",
title = "Gráfico Q-Q meatmeal v/s distr.normal")
print (g.meatmeal)
g.soybean <- ggqqplot (data = datos.soybean,
x = "weight",
color = "red",
title = "Gráfico Q-Q soybean v/s distr.normal")
print (g.soybean)
# Se puede ver a partir de los gráficos Q-Q generados, que las muestras efectivamente poseen distribuciones normales
# Para complementar las verificaciones, se realizan las pruebas de Shapiro-Wilk, considerando un alfa = 0.01
shapiro.test(datos.meatmeal[["weight"]])
shapiro.test(datos.soybean[["weight"]])
# Como los resultados dieron un p mayor a 0.01, se concluye finalmente que sí corresponden a una distribución normal ambas muestras
# De manera adicional, como son muestras tomadas al azar y una muestra no depende de la otra, se concluye que son independientes entre sí,
# cumpliéndose todos los requisitos para realizar una prueba T con 2 muestras independientes (meatmeal y soybean)
# Parte 2: Definición de las Hipótesis
# Hipótesis nula:
# H0: No existe una diferencia en efectividad entre las muestras
# Hipótesis alternativa
# Ha: Existe diferencia, en promedio, entre las efectividades de las muestras
# Vamos a considerar que la efectividad se puede medir como el promedio de los pesos de los pollitos
# que consuman tal suplemento
media.meatmeal <- mean(datos.meatmeal[["weight"]])
media.soybean <- mean(datos.soybean[["weight"]])
# H0:  media.meatmeal - media.soybean = 0
# Ha: media.meatmeal - media.soybean <> 0
# Parte 3
# Se parte realizando las pruebas t para 2 muestras independientes
# Mantendremos el nivel de significación igual a 0.01
alfa <- 0.01
prueba <- t.test(x = datos.meatmeal[["weight"]],
y = datos.soybean[["weight"]],
paired = FALSE,
alternative = "two.sided",
mu = 0,
conf.level = 1 - alfa)
print(prueba)
diferencia <- media.meatmeal - media.soybean
cat ("diferencia de las medias = ", diferencia, "[g]")
print(diferencia)
#Llamado de librerías
library(ggpubr)
library(ggplot2)
library (dplyr)
#Importación de datos
datos <- chickwts
#Grafico de cajas que compara los pesos de los pollitos por tipo de alimento suministrado
g <- boxplot(weight ~ feed,
data = datos,
border = "red",
col = "pink",
ylab = "Pesos de los Pollitos [g]",
xlab = "Tipo de Alimento Suministrado")
print (g)
# Se grafican todas las muestras con cajas como primera instancia para responder la pregunta planteada, viendo que
# la mayoría de los datos de meatmeal superan a soybean.
# Parte 1: Verificación
# Para poder utilizar la prueba T en 2 muestras independientes, requerimos demostrar que cumplen los requisitos:
#1. Cada muestra cumple las condiciones para usar la distribución t.
#2. Las muestras son independientes entre sí.
# Para la 1, las condiciones de la distribución t es que cada muestra cuente con una distribución normal y que
# las muestras sean independientes entre sí. Por lo tanto, verificaremos estas condiciones para cada muestra (soybean y meatmeal)
# Se separan las muestras meatmeal y soybean
datos.meatmeal <- datos %>% filter(feed == "meatmeal")
datos.soybean <- datos %>% filter(feed == "soybean")
# Verificar si las distribuciones se acercan a la normal
g.meatmeal <- ggqqplot (data = datos.meatmeal,
x = "weight",
color = "steelblue",
title = "Gráfico Q-Q meatmeal v/s distr.normal")
print (g.meatmeal)
g.soybean <- ggqqplot (data = datos.soybean,
x = "weight",
color = "red",
title = "Gráfico Q-Q soybean v/s distr.normal")
print (g.soybean)
# Se puede ver a partir de los gráficos Q-Q generados, que las muestras efectivamente poseen distribuciones normales
# Para complementar las verificaciones, se realizan las pruebas de Shapiro-Wilk, considerando un alfa = 0.01
shapiro.test(datos.meatmeal[["weight"]])
shapiro.test(datos.soybean[["weight"]])
# Como los resultados dieron un p mayor a 0.01, se concluye finalmente que sí corresponden a una distribución normal ambas muestras
# De manera adicional, como son muestras tomadas al azar y una muestra no depende de la otra, se concluye que son independientes entre sí,
# cumpliéndose todos los requisitos para realizar una prueba T con 2 muestras independientes (meatmeal y soybean)
# Parte 2: Definición de las Hipótesis
# Hipótesis nula:
# H0: No existe una diferencia en efectividad entre las muestras
# Hipótesis alternativa
# Ha: Existe diferencia, en promedio, entre las efectividades de las muestras
# Vamos a considerar que la efectividad se puede medir como el promedio de los pesos de los pollitos
# que consuman tal suplemento
media.meatmeal <- mean(datos.meatmeal[["weight"]])
media.soybean <- mean(datos.soybean[["weight"]])
# H0:  media.meatmeal - media.soybean = 0
# Ha: media.meatmeal - media.soybean <> 0
# Parte 3
# Se parte realizando las pruebas t para 2 muestras independientes
# Mantendremos el nivel de significación igual a 0.01
alfa <- 0.01
prueba <- t.test(x = datos.meatmeal[["weight"]],
y = datos.soybean[["weight"]],
paired = FALSE,
alternative = "two.sided",
mu = 0,
conf.level = 1 - alfa)
print(prueba)
diferencia <- media.meatmeal - media.soybean
cat ("diferencia de las medias = ", diferencia, "[g]")
print(diferencia)
